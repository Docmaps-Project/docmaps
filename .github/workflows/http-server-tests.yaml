name: Test http-server

on:
  push:
    # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  workflow_call:

env:
  PKG_DIR: "packages/http-server"

jobs:
  unit_tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.18.0]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('${{env.PKG_DIR}}/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          cd ${{env.PKG_DIR}} ;
          pnpm install;

      - name: Verify builds
        run: |
          cd ${{env.PKG_DIR}} ;
          pnpm run -r build;

      - name: Test
        run: |
          cd ${{env.PKG_DIR}} ;
          pnpm test:unit;

      - name: Lint Check
        run: |
          cd ${{env.PKG_DIR}} ;
          pnpm lint;

  integration_tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.14.0, 18.18.0]

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      sparql_backend:
        # Docker Hub image
        image: ghcr.io/oxigraph/oxigraph
        #
        ports:
          # Opens tcp port 6379 on the host and service container
          - 33078:7878

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('${{env.PKG_DIR}}/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          cd ${{env.PKG_DIR}} ;
          pnpm install;

      - name: Test
        run: |
          cd ${{env.PKG_DIR}} ;
          pnpm test:integration --timeout=30s ;
