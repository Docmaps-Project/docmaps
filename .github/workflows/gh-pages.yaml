# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  push:
    branches:
      - ships/add-typedoc-to-ts-sdk
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  workflow_call:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.14.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Install dependencies
        run: |
          pnpm install;

      - name: Verify docs
        run: |
          cd packages/ts-sdk ;
          pnpm docs:check;

      - name: Build SPA
        run: |
          cd packages/spa ;
          pnpm build;

      - name: Convert symlinks to hard links
          # from https://superuser.com/questions/560597/convert-symlinks-to-hard-links
          #   we use symlinks for local dev & because they are committable to repo,
          #   but hard links are needed for building tape archive to upload
        run: |
          cd docs ;
          find -type l -exec bash -c 'ln -f "$(readlink -m "$0")" "$0"' {} \;

      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v1
      #   with:
      #     # Upload subdirectory
      #     path: './docs'
      # - name: Deploy to GitHub Pages
      #   id: deployment
      #   uses: actions/deploy-pages@v2
