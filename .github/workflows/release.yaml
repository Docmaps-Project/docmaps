name: Release all packages with semantic release

permissions:
  actions: read
  checks: read
  contents: write
  packages: write
  pages: write
  id-token: write

on:
  push:
    branches:
      - main

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  test-ts-sdk:
    uses: ./.github/workflows/ts-sdk-tests.yaml
  test-ts-etl:
    uses: ./.github/workflows/ts-etl-tests.yaml
  test-example:
    uses: ./.github/workflows/example-tests.yaml
  test-specification:
    uses: ./.github/workflows/specification-tests.yaml
  nodejs_release:
    needs:
      - test-ts-sdk
      - test-ts-etl
      - test-specification
      - test-example

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.14.0]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          pnpm install;

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        # must ignore spa because we need spa in the workspace file for development, but spa is not released.
        run: npx multi-semantic-release --ignore-packages=packages/spa,packages/example,packages/widget

  release-github-pages-docs:
    uses: ./.github/workflows/gh-pages.yaml
