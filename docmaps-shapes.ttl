@prefix : <https://w3id.org/docmaps/v0/> .
@prefix ti: <http://www.ontologydesignpatterns.org/cp/owl/timeinterval.owl#> .
@prefix cnt: <http://www.w3.org/2011/content#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix pro: <http://purl.org/spar/pro/> .
@prefix pso: <http://purl.org/spar/pso/> .
@prefix pwo: <http://purl.org/spar/pwo/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix frbr: <http://purl.org/vocab/frbr/core#> .
@prefix prov: <https://www.w3.org/TR/prov-o/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix fabio: <http://purl.org/spar/fabio/> .
@prefix prism: <http://prismstandard.org/namespaces/basic/2.0/> .
@prefix taskex: <http://www.ontologydesignpatterns.org/cp/owl/taskexecution.owl#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@base <https://w3id.org/docmaps/v0/> .
#################################################################
#    Shapes
#################################################################

:Docmap a owl:Class ;
        rdfs:subClassOf pwo:Workflow ;
        rdfs:label "Docmap" ;
        rdfs:comment "A Docmap is a Workflow of publishing steps with additional metadata" ;
        .

:DocmapShape
        a sh:NodeShape ;
        sh:targetClass :Docmap ;
        sh:property [
                sh:path dcterms:created ;
                # TODO: specify it is an xsd:date string
                sh:minCount 1 ;
                sh:maxCount 1 ;
        ] ;
        sh:property [
                sh:path pwo:hasFirstStep ;
                # somewhat redundant because it is a owl:subPropertyOf hasStep;
                # specifying here is useful however for generation.
                sh:node :DocmapStepShape ;
                sh:maxCount 1 ;
        ] ;
        sh:property [
                sh:path dcterms:publisher ;
                sh:node :DocmapPublisherShape ;
        ] ;
        sh:property [
                sh:path pwo:hasStep ;
                sh:node :DocmapStepShape ;
        ]
        .

:DocmapActionShape
        a sh:NodeShape ;
        sh:ignoredProperties ( rdf:type ) ;
        .

:DocmapStepShape
        a sh:NodeShape ;
        sh:ignoredProperties ( rdf:type ) ;
        sh:property [
                sh:path pwo:hasNextStep ;
                # TODO: make sure this is safe, because possibly validation can't handle this recursion
                #   If we mysteriously start getting callstack size errors, it could be because of this
                #   and we def get those errors when we add the same call for hasPreviousStep
                sh:node :DocmapStepShape ;
        ] ;
        sh:property [
                sh:path taskex:isExecutedIn ;
                sh:node :DocmapActionShape ;
        ] ;
        .
